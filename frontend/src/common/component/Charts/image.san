<template>
    <div class="visual-dl-image">
        <h3>{{tagInfo.tag.displayName}}
            <span>{{tagInfo.run}}</span>
        </h3>
        <p>
            <span>Step:</span>
            <span>{{imgData.step}};</span>
            <span>{{imgData.wall_time | formatTime}}</span>
        </p>
        <san-slider
            on-change="handleSlideChange($event)"
            value="{{currentIndex}}"
            min="{{slider.min}}"
            max="{{steps}}"
            step="{{1}}"
        />
        <img style="{{computedImgStyle}}" src="{{imgData.imgSrc}}" />
    </div>
</template>
<script>
import Slider from 'san-mui/Slider';
import {getPluginImagesImages} from '../../../service';

const defaultImgWidth = 400;
const defaultImgHight = 300;

export default {
    components: {
        'san-slider': Slider
    },
    computed: {
        steps() {
            let data = this.data.get('data') || [];
            return data.length - 1;
        },
        computedImgStyle() {
            let isActualImageSize = this.data.get('isActualImageSize');
            let width;
            let height;
            if (isActualImageSize) {
                width = this.data.get('imgData.width');
                height = this.data.get('imgData.height');
                console.log('1111', width, height);
            }
            else {
                width = defaultImgWidth;
                height = defaultImgHight;
            }
            // console.log('width:' + width + 'px;height:' + height + 'px');
            return 'width:' + width + 'px;height:' + height + 'px';
        }
    },
    filters: {
        formatTime(value) {
            if (!value) {
                return;
            }
            let time = new Date();
            time.setTime(value.toString().split('.')[0]);
            return time;
        }
    },
    initData() {
        return {
            currentIndex: 0,
            slider: {
                value: '0',
                label: '',
                min: 0,
                step: 1
            }
        };
    },
    inited() {
        let {run, tag} = this.data.get('tagInfo');
        let {displayName, samples} = tag;
        let params = {
            run,
            tag: displayName,
            samples
        };
        getPluginImagesImages(params).then(({data}) => {
            this.data.set('data', data);
            this.data.set('currentIndex', data.length - 1);
        });

        // currentIndex change event
        this.watch('currentIndex', index => {
            /* eslint-disable fecs-camelcase */
            let currentImgInfo = this.data.get('data') ? this.data.get('data')[index] : {};
            let {height, width, query, step, wall_time} = currentImgInfo;
            let url = '/data/plugin/images/individualImage?ts=' + wall_time;
            let imgSrc = [url, query].join('&');
            this.data.set('imgData', {
                imgSrc,
                height,
                width,
                step,
                wall_time
            });
            /* eslint-enable fecs-camelcase */
        });

        // isActualImageSize change event
        this.watch('isActualImageSize', isActualImageSize => {
            console.log(isActualImageSize);
        });

        // isActualImageSize change event
        this.watch('runs', runs => {
            console.log(runs);
        });

    },
    handleSlideChange(val) {
        this.data.set('currentIndex', val);
    }
};
</script>
<style lang="stylus">
    .visual-dl-image
        padding 10px
        font-size 12px
        width 400px
        float left

        .visual-dl-chart-actions
            .sm-form-item
                width 300px
                display inline-block
</style>

